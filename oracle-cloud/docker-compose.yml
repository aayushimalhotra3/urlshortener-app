# Oracle Cloud Always Free - Docker Compose Configuration
# This setup is optimized for Oracle's free tier ARM instances

version: '3.8'

services:
  urlshortener:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: urlshortener
    restart: unless-stopped
    ports:
      - "80:8080"
      - "443:8080"  # For HTTPS with reverse proxy
    environment:
      - PORT=8080
      - GIN_MODE=release
      - LOG_LEVEL=info
      - METRICS_ENABLED=true
      - RATE_LIMIT_RPS=20
      - RATE_LIMIT_BURST=50
      - MAX_URL_LENGTH=2048
      - DB_PATH=/data/urlshortener.db
      - REQUIRE_HTTPS=true
    volumes:
      - urlshortener_data:/data
      - ./logs:/app/logs
    networks:
      - urlshortener_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Nginx reverse proxy for HTTPS and load balancing
  nginx:
    image: nginx:alpine
    container_name: urlshortener_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - urlshortener
    networks:
      - urlshortener_network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  # Prometheus for monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: urlshortener_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    networks:
      - urlshortener_network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Grafana for dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: urlshortener_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_ANALYTICS_REPORTING_ENABLED=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ../monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    networks:
      - urlshortener_network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

volumes:
  urlshortener_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  urlshortener_network:
    driver: bridge